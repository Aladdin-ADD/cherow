import { IParser, ESTree, Context } from 'cherow';
export declare function parseStatementListItem(parser: IParser, context: Context): ESTree.Statement;
export declare function parseStatement(parser: IParser, context: Context): ESTree.Statement;
export declare function parseEmptyStatement(parser: IParser, context: Context): ESTree.EmptyStatement;
export declare function parseContinueStatement(parser: IParser, context: Context): ESTree.ContinueStatement;
export declare function parseBreakStatement(parser: IParser, context: Context): ESTree.BreakStatement;
export declare function parseIfStatement(parser: IParser, context: Context): ESTree.IfStatement;
export declare function parseDebuggerStatement(parser: IParser, context: Context): ESTree.DebuggerStatement;
export declare function parseTryStatement(parser: IParser, context: Context): ESTree.TryStatement;
export declare function parseCatchBlock(parser: IParser, context: Context): ESTree.CatchClause;
export declare function parseThrowStatement(parser: IParser, context: Context): ESTree.ThrowStatement;
export declare function parseExpressionStatement(parser: IParser, context: Context): ESTree.ExpressionStatement;
export declare function parseDirective(parser: IParser, context: Context): ESTree.ExpressionStatement;
export declare function parseExpressionOrLabelledStatement(parser: IParser, context: Context): ESTree.ExpressionStatement | ESTree.LabeledStatement;
export declare function parseDoWhileStatement(parser: IParser, context: Context): ESTree.DoWhileStatement;
export declare function parseWhileStatement(parser: IParser, context: Context): ESTree.WhileStatement;
export declare function parseBlockStatement(parser: IParser, context: Context): ESTree.BlockStatement;
export declare function parseReturnStatement(parser: IParser, context: Context): ESTree.ReturnStatement;
export declare function parseIterationStatement(parser: IParser, context: Context): ESTree.Statement;
export declare function parseWithStatement(parser: IParser, context: Context): ESTree.WithStatement;
export declare function parseSwitchStatement(parser: IParser, context: Context): ESTree.SwitchStatement;
export declare function parseCaseOrDefaultClauses(parser: IParser, context: Context): ESTree.SwitchCase;
export declare function parseVariableStatement(parser: IParser, context: Context, shouldConsume?: boolean): ESTree.VariableDeclaration;
