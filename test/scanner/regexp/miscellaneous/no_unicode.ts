import * as assert from 'clean-assert';
import * as t from 'assert';
//import { ValidatorState, validateRegExp } from '../../../../src/regexp';
import { Context } from '../../../../src/utilities';
import * as ESTree from '../../../../src/estree';

describe.skip('Regular expressions', () => {

    describe.skip('Failure', () => {

        const invalidSyntax = [
            '/(?/',
            '/(?=/',
            '/(?=foo/',
            '/(/',
            '/(?!/',
            '/(?!foo/',
            '/(*)/',
            '/a{2,1}/',
            '/(a{2,1}/',
            '/(/',
            '/)/',
            '/^*/',
            '/[\w-e]/',
            '/$*/',
            '/\\2(a)(/',
            '/(?a/',
            '/(?:/',
            '/(?:a/',
            '/(:a/',
            '/(?=/',
            '/(?=foo/',
            '/(?=foo/',
            '/(?!/',
            '/(?!/',
            '/(?!foo/',
            '/(a{2,1}/',
            '/(*)/',
            '/(/',
            '/^(\d+)\s+IN\s+SOA\s+(\S+)\s+(\S+)\s*\(\s*$/',
            '/^\*\.[a-z]([a-z\-\d]*[a-z\d]+)?(\.[a-z]([a-z\-\d]*[a-z\d]+)?)*$/',
            //        "/[/",
            '/^*/',
            '/$*/',
            '/\\2(a)(/',
            '/(?/',
            '/(?a/',
            '/(?a)/',
            '/(?:/',
            '/(?:a/',
            '/(:a/',
            '/[\\c-a]/',
            '/[0-9--+]/',
            '/[\\z-\\a]/',
            '/[\\u0001-\\u0000]/',
            '/[\\u{1}-\\u{2}]/',
            '/[\\u{2}-\\u{1}]/',
            '/[a-b--+]/',
            '/^\s*(\*|[\w\-]+)(\b|$)?/',
            '/[b-a]/',
            '/${2,1}/',
            '/${1,2}/',
            '/[\\u0001-\\u0000]/',
            '/[\\u{2}-\\u{1}]/',
            '/[0-9--+]/',
            '/(*)/',
            '/(/',
            '/)/',
            '/(/',
            '/a)/',
            '/(?/',
            '/(?=/',
            '/[\s-:]/',
            '/^[\d-X]*$/',
            '/^[\d-X-Z]*$/',
            '/^[\d-X-Z]*$/',
            '/[\\u0000-\\ud83c\\udf38-\\u0000]/',
            '/[\\u0000-🌸-\\u0000]/',
            '/[🌷-🌸]/',

        ];
        for (const arg of invalidSyntax) {

            it(`${arg}`, () => {

                t.throws(() => {
                    validateRegExp(`${arg}`, ValidatorState.Empty);
                });
            });
        }
    });

    describe.skip('Pass', () => {

          // Testing assertions
          const validAssertions = [
            '/(x)(?=\\1)x/',
            '/(.*?)a(?!(a+)b\\2c)\\2(.*)/',
            '/(?=(a+?))(\\1ab)/',
            '/(?=(a+?))(\\1ab)/',
            '/^P([1-6])(?=\\1)([1-6])$/',
            '/(([a-c])b*?\\2)*/',
            '/(x)(?=x)x/',
            '/(x)(?=\\1)x/',
            '/(x)(?=x)x/',
            '/(x)(\\1)/',
            '/(x)(?=\\1)x/',
            '/(x)zzz(?=\\1)x/',
            '/(a)\\1(?=(b*c))bc/',
            '/(a)a(?=(b*c))bc/',
            '/a(?=(b*c))bc/',
            '/(?=((?:ab)*))a/',
            '/(?=((?:xx)*))x/',
            '/(?=(xx))+x/',
            '/(?=a+b)aab/',
            '/(?!(u|m{0,}g+)u{1,}|2{2,}!1%n|(?!K|(?=y)|(?=ip))+?)(?=(?=(((?:7))*?)*?))p/',
            '/(?=(a)b|c?)()*d/',
        ];

          for (const arg of validAssertions) {

            it(`${arg}`, () => {

                t.doesNotThrow(() => {
                    validateRegExp(`${arg}`, ValidatorState.Empty);
                });
            });
        }

         // Testing parentheses
          const validParentheses = [
            '/(a|A)(b|B)/',
            '/(a((b)|c|d))e/',
            '/(a(b|(c)|d))e/',
            '/(a(b|c|(d)))e/',
            '/(a((b)|(c)|(d)))e/',
            '/(a((b)|(c)|(d)))/',
            '/(a(b)??)??c/',
            '/(a|(e|q))(x|y)/',
            '/((t|b)?|a)$/',
            '/(?:h|e?(?:t|b)?|a?(?:t|b)?)(?:$)/',
            '/([Jj]ava([Ss]cript)?)\sis\s(fun\w*)/',
            '/(?:(.+), )?(.+), (..) to (?:(.+), )?(.+), (..)/',
            '/(A)?(A.*)/',
            '/(a)|(b)/',
            '/^(?!(ab)de|x)(abd)(f)/',
            '/(a|A)(b|B)/',
            '/(a|d|q|)x/',
            '/^.*?(:|$)/',
            '/(ab|^.{0,2})bar/',
            '/(?:(?!foo)...|^.{0,2})bar(.*)/',
            '/([a-g](b|B)|xyz)/',
            '/(?:^|;)\s*abc=([^;]*)/',
            '/^(?:(?=abc)\w{3}:|\d\d)$/',
            '/a(b)(a*)|aaa/',
            '/^\s*((\[[^\]]+\])|(u?)("[^"]+"))\s*/',
            '/^\s*(m(\[[^\]]+\])|m(u?)("[^"]+"))\s*/',
            '/\s*(m(\[[^\]]+\])|m(u?)("[^"]+"))\s*/',
            '/(?:^|\b)btn-\S+/',
            '/^((a|b)(x|xxx)|)$/',
            '/^([1][0-2]|[0]\d|\d)(\/|\.|\-)([0-2]\d|[3][0-1]|\d)((\/|\.|\-)(\d\d|\d\d\d\d)|)$/',
            '/^((\/|\.|\-)(\d\d|\d\d\d\d)|)$/',
            '/^(z|(x|xx)|b|)$/',
            '/(8|((?=P)))?/',
            '/((8)|((?=P){4}))?()/',
            '/(?!(?=r{0}){2,})|((z)?)?/',
            '/(?!(?:\\1+s))/',
            '/(?=(?:(?:(gB)|(?!cs|<))((?=(?!v6){0,})))|(?=#)+?)/',
            '/(|a)/',
            '/(a|)/',
            '/a|b(?:[^b])*?c/',
            '/(X(?:.(?!X))*?Y)|(Y(?:.(?!Y))*?Z)/',
        ];

          for (const arg of validParentheses) {

            it(`${arg}`, () => {

                t.doesNotThrow(() => {
                    validateRegExp(`${arg}`, ValidatorState.Empty);
                });
            });
        }

          const validSyntax = [
            '/{1}/',
            '/^}*$/',
            '/]/',
            '/([a ]\\b)*\\b/',
            '/((a)|(ab))((c)|(bc))/',
            '/\\f\\n\\r\\t\\v\\s\\S/',
            '/(?<!(^|[ab]))w{2}/',
            '/(ab)/',
            '/(ab)|(ac)+/',
            '/(?:)/',
            '/(a|ab)/',
            '/.*a(.*aaa.*)a.*/',
            '/(([^:]*)://([^:/?]*)(:([0-9]+))?)?([^?#]*)([?]([^#]*))?(#(.*))?/',
            '/\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fd5\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ae\ua7b0-\ua7b7\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc/',
            '/\r\n?|\n|\u2028|\u2029/',
            '/(?:\{[\s\S]*\}|\[[\s\S]*\])$/',
            '/:jqmData\(([^)]*)\)/',
            '/^ui-id-\d+$/',
            ' /^\/|(\/[^\/]*|[^\/]+)$/',
            '/[^\/]*\.[^\/*]+$/',
            '/^#/',
            '/^#[^#]+$/',
            '/(?=a|b?)c/',
            '/^[\c]$/',
            '/a*abc?xyz+pqr{3}ab{2,}xy{4,5}pq{0,6}AB{0,}zz/',
            '/^(abc){1,2}zz/',
            '/^(b+?|a){1,2}?c/',
            '/^(b+|a){1,2}c/',
            '/^(b*|ba){1,2}?bc/',
            '/^\ca\cA/',
            '/^[\]cde]/',
            '/^[^ab\]cde]/',
            '/^[^\]cde]/',
            '/^\xc2/',
            '/^\xc3/',
            '/^.+[0-9][0-9][0-9]$/',
            '/^.+?[0-9][0-9][0-9]$/',
            '/^([^!]+)!(.+)=apquxz\.ixr\.zzz\.ac\.uk$/',
            '/:/',
            '/([\da-f:]+)$/',
            '/^.*\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/',
            '/^[a-zA-Z\d][a-zA-Z\d\-]*(\.[a-zA-Z\d][a-zA-z\d\-]*)*\.$/',
            '/^(a(b(c)))(d(e(f)))(h(i(j)))(k(l(m)))$/',
            '/^(?=(ab(cd)))(ab)/',
            '/^[.^$|()*+?{,}]+/',
            '/^a*\w/',
            ' /^a*?\w/',
            '/^a+?\w/',
            '/^\d{8}\w{2,}/',
            '/^[aeiou\d]{4,5}?/',
            '/^(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)\\11*(\\3\\4)\\1(?:)2$/',
            '/^From +([^ ]+) +[a-zA-Z][a-zA-Z][a-zA-Z] +[a-zA-Z][a-zA-Z][a-zA-Z] +[0-9]?[0-9] +[0-9][0-9]:[0-9][0-9]/',
            '/^From\s+\S+\s+([a-zA-Z]{3}\s+){2}\d{1,2}\s+\d\d:\d\d/',
            '/^12.34/',
            '/foo(?!bar)(.*)/',
            '/(?:(?!foo)...|^.{0,2})bar(.*)/',
            '/^(\D*)(?=\d)(?!123)/',
            '/^(a)\\1{2,3}(.)/',
            '/^[ab]{1,3}?(ab*|b)/',
            '/^[ab]{1,3}?(ab*?|b)/',
            '/abc\\0def\\00pqr\\000xyz\\0000AB/',
            '/abc\x0def\x00pqr\x000xyz\x0000AB/',
            '/^[\\000-\\037]/',
            '/A\\0{2,3}Z/',
            '/^(icefapper|)\\1(bell)/',
            '/^(a|)\\1{2,3}b/',
            '/ab{1,3}bc/',
            '/^[W-c]+$/',
            '/^abc$/',
            '/[\d-]+/',
            '/ab{3,4a}cd/',
            '/(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)\\12\\123/',
            '\\000\\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\047\\050\\051\\063\\064\\065\\066\\076\\077\\100\\363\\364\\365\\366\\367\\370/',
            '\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d/',
            '/P[^*]TAIRE[^*]{1,6}?LL/',
            '/(\.\d\d((?=0)|\d(?=\d)))/',
            '/(?:a|(?:bc)){0,0}?xyz/',
            '/[^a]/',
            '/a(.{3,5})b/',
            '/a(.{3,5}?)b/',
            '/^[a\u00c0]/',
            '/(?:\u0100){3}b/',
            '/^[^a]{2,}/',
            '/\u0100?/',
            '/\u0100{1,3}/',
            '/\S{2,3}?/',
            '/[z-\u0200]/',
            '/[Q\u0100\u0200]{1,3}?/',
            '/[^\xFF]/',
            '/[\xFF]/',
            '/^\d*b/',
            '/^\u0085$/',
            '/^\xe1\x88\xb4/',
            '/\S{2}/',
            '/[^a-zA-Z]/',
            '/(?<=a\u100000b)cd/',
            '/(?<=[Q\u0100\u0200])X/',
            '/(?:a*?)(?:a*?)(?:a*?)/',
            '/(?:a*?){2}/',
            '/(?:a*?){2,3}/',
            '/(?:a*?){2,3}/',
            '/(?:a*?)?/',
            '/(?:a*?)?/',
            '/(?:a*?)*/',
            '/(?:a*?)*/',
            '/(?:a*?)*/',
            '/(?:a*)a/',
            '/.*blah.*/',
            '/^.*blah.*/',
            '/.*blah.*$/',
            '/^.*blah.*$/',
            '/.*?blah.*/',
            '/.*blah.*?/',
            '/^.*?blah.*?$/',
            '/^(.*)blah.*$/',
            '/^.*blah.*/',
            '/.*(?:blah).*$/',
            '/.*(?:blah|buzz|bang).*$/',
            '/.*\n\d+.*/',
            '/(?:(?=g)).{2147483648,}/',
            '/(?:(?=g))|(?:m).{2147483648,}/',
            '/[^a]|ab/',
            '/b|[^b]/',
            '/(?:[^(?!)]||){23}z/',
            '/(.*)\b(\d+)$/',
            '/^(?:a){0,0}/',
            '/^(a){0,2}/',
            '/^(a){0,}/',
            '/^(a){1,}/',
            '/(.*X|^B)/',
            '/^B/',
            '/^[abc]{12}/',
            '/^[abcdefghijklmnopqrstuvwxy0123456789]/',
            '/<tr([\w\W\s\d][^<>]{0,})><TD([\w\W\s\d][^<>]{0,})>([\d]{0,}\.)(.*)((<BR>([\w\W\s\d][^<>]{0,})|[\s]{0,}))<\/a><\/TD><TD([\w\W\s\d][^<>]{0,})>([\w\W\s\d][^<>]{0,})<\/TD><TD([\w\W\s\d][^<>]{0,})>([\w\W\s\d][^<>]{0,})<\/TD><\/TR>/',
            '/a(.*)(.)/',
            '/a(.)(.)/',
            '/a(.??)(.)/',
            '/a(.{3,})b/',
            '/[^k]{2,3}$/',
            '/(a)\\1{8,}/',
            '/^(a|)\\1+b/',
            '/(?!^)abc/',
            '/^[ab]{1,3}(ab*|b)/',
            '/^[\da-f](\.[\da-f])*$/',
            '/^\".*\"\s*(;.*)?$/',
            '/[\\d-x]+/',
            '/[\\d-\\d]+/',
            '/[\\d-a-z]+/',
            '/[\\d\\-x]+/',
            '/[x\\-\\d]+/',
            '/[\\d\\-\\d]+/',
            '/[\\d-]+/',
            '/[a\\-c]+/',
            '/^(:?\w+:)/',
            '/^https?:/',
            '/^(?:webkit|moz|o)[A-Z]/',
            '/^\s*<(\w+)/',
            '/;\s*$/',
            '/^(mouse|click)/',
            '/msie [\w.]+/',
            '/ui-(bar|body|overlay)-([a-z])\b/',
            '/^(\w+)\s*(.*)$/',
            '/^[^#]*#?(.*)$/',
            '/#.*/',
            '/AppleWebKit\/([0-9]+)/',
            '/Fennec\/([0-9]+)/',
            '/Opera Mobi\/([0-9]+)/',
            '/(BrowserNG|NokiaBrowser)\/7\.[0-3]/',
            '/^\c%$/',
            '/^\d%$/',
            '/^\e%$/',
            '/^\ca$/',
            '/^\cA$/',
            '/^\c9$/',
            '/^\c$/',
            '/^[\c%]*$/',
            '/(?!a){0}/',
            '/(?!a){1}/',
            '^(?=a)?b$/',
            '/^[\c:]*$/',
            '/^[\c0]*$/',
            '/(?=a){0}/',
            '/.*(a\w).*/',
            '/()()()()()()()()()()(z)?(y)/',
            '/(\\w+)\\s*,\\s*(\\w+)/',
            '/([^b]*)+((..)|(\\3))+?Sc*a!(a|ab)(c|bcd)(<*)/',
            '/\w+\w+\w+/',
            '/^/',
            '/(?=)/',
            '/(p)/',
            '/(x)y(z)/',
            '/123/',
            '/()()()\\3/',
            '/a(\w+)c/',
            '\\/',
            '\\/\\/',
            '\\\\/',
            '/((\d+)\.(\d+))/',
            '/(abc)d/',
            '/\\02(x)(y)/',
            '/icefapper/',
            '/^[\w\-]+:\/+(?!\/)(?:[^.\/]+\.)*?reports\.adblockplus\.org(?:[\x00-\x24\x26-\x2C\x2F\x3A-\x40\x5B-\x5E\x60\x7B-\x80]|$)/',
            '/\-/',
            '/a|ab/',
            '/(a(b(c(d(e)f)g)h)i)/',
            '/(^\n*)/',
            '/^[\c1]*$/',
            '/^[\c2]*$/',
            '/^[\c3]*$/',
            '/^[\c4]*$/',
            '/^[\c5]*$/',
            '/^[\c6]*$/',
            '/^[\c7]*$/',
            '/^[\c8]*$/',
            '/^[\c9]*$/',
            '/^[\c_]*$/',
            '/^[\c11]*$/',
            '/^[\\8]*$/',
            '/^[\\7]*$/',
            '/^[\\11]*$/',
            '/^[\\111]*$/',
            '/^[\c$]$/',
            '/^[Z-\c-e]*$/',
            '/(.)(.)(.)(.)(.)(.)(.)(.)(.)(.)/',
            '/foo$(?=(ball)?)/',
            '/()foo$(?!bar)/',
            '/(x?)foo$\\1/',
            '/foo$(?=(ball)?)/',
            '/foo$(?!bar)/',
            '/x((?:))\\1\\1x/',
            '/x(?:...|(...))\\1x/',
            '/x(?:...|(...))\\1x/',
            '/()x\\1(y([0-7]%%%x|[0-6]%%%y)|dkjasldkas)/',
            '/x([0-7]%%%x|[0-6]%%%y)/',
            '/()x\\1(y([0-7]%%%x|[0-6]%%%y)|dkjasldkas)/',
            '/()x\\1y([0-7]%%%x|[0-6]%%%y)/',
            '/()x\\1(y([0-7]%%%x|[0-6]%%%y)|dkjasldkas)/',
            '/()x\\1(y([0-7]%%%x|[0-6]%%%y)|dkjasldkas)/',
            '/()foo$\\1/',
            '/foo$(?=ball)/',
            '/foo$(?!bar)/',
            '/(x?)foo$\\1/',
            '/foo$(?=ball)/',
            '/foo$(?!bar)/',
            '/f(o)\b\\1/',
            '/f(o)\B\\1/',
            '/x(...)\\1/',
            '/b\b/',
            '/b\b$/',
            '/\bb/',
            '/^\bb/',
            '/b\B$/',
            '/b\b[,b]/',
            '/b\B[,b]/',
            '/[,b]\Bb/',
            '/[,b]\b[,b]/',
            '/(?:a|bc)g$/',
            '/(?:a|bc$)/',
            '/(.\\2).(\\1)/',
            '/a(.\\2)b(\\1)$//',
            '/a(.\\2)b(\\1)/',
            '/foo$(?=(ball)?)/',
            '/()??/',
            '/()??/',
            '/()??/',
            '/^(?:0|[1-9]\d*)$/',
            '/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/',
            '/($^)/',
            '/.?/',
            '/()()/',
            '/(.?)(.?)/',
            '/(?:ab)*/',
            '/(?:)/',
            '/hello icefapper/',
            '/(b)*/',
            '/a()\\1/',
            '/\\c//flipperwald',
            '/"[^"]*"|\'[^\']*\'/',
            '/"[^<"]*"|\'[^<\']*\'/',
            '/World/',
            '/[\\n\\r\\t ]/',
            '/[\\\\]/',
            '\^-]*-/',
            '/=*$/',
            '/[e-\w]/',
            '/(.{2})(?=.)/',
            '/^[a-fA-F0-9]+$/',
            '/[^-]*-([^-][^-]*-)*-/',
            '/[^-]*-([^-][^-]*-)*->?/',
            '/[^<]+/',
            '/\\1/',
            '/a\\91',
            '/^[0-5][0-9]$/',
            '/2[0-3]|[01][0-9]/',
            '/1[0-2]|0?[1-9]/',
            '/{1,}/u',
            '/{1,2}/u',
            '/{1}?/u',
            '/{1,}?/u',
            '/{1,2}?/u',
            '/?/',
            '/+/',
            '/\\x/flipperwald',
            '/\\u1/flipperwald',
            '/\\u123/flipperwald',
            '[\\x1]',
            '/[^<]+|<(!(--([^-]*-([^-][^-]*-)*->?)?|\\[CDATA\\[([^]]*]([^]]+])*]+([^]>][^]]*]([^]]+])*]+)*>)?|DOCTYPE([ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*|"[^"]*"|\'[^\']*\'))*([ \\n\\t\\r]+)?(\\[(<(!(--[^-]*-([^-][^-]*-)*->|[^-]([^]"\'><]+|"[^"]*"|\'[^\']*\')*>)|\\?([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*(\\?>|[\\n\\r\\t ][^?]*\\?+([^>?][^?]*\\?+)*>))|%([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*;|[ \\n\\t\\r]+)*]([ \\n\\t\\r]+)?)?>?)?)?|\\?(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*(\\?>|[\\n\\r\\t ][^?]*\\?+([^>?][^?]*\\?+)*>)?)?|/(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+)?>?)?|(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+)?=([ \\n\\t\\r]+)?("[^<"]*"|\'[^<\']*\'))*([ \\n\\t\\r]+)?/?>?)?)/',
            '/[z-z]/',
            '/\_/',
            '/^[A-Za-z0-9\-_]+$/',
            '/^[a-zA-Z0-9 ]*$/',
            '/^[a-zA-Z0-9]*$/',
            '/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*$/',
            '/^(?:AB|BC|MB|N[BLTSU]|ON|PE|QC|SK|YT)*$/',
            '/^((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})*$/',
            '#^((19|20)?[0-9]{2}[- /.](0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01]))*$#',
            '/^(3(?:0[0-5]|[68][0-9])[0-9]{11})*$/',
            '/^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4})*$/',
            '/^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/',
            '/^(5[1-5][0-9]{14})*$/',
            '/^([a-z])*$/',
            '/^(?=^.{6,}$)((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.*$/',
            '/^((([0-9]{1})*[- .(]*([0-9]{3})[- .)]*[0-9]{3}[- .]*[0-9]{4})+)*$/',
            '/^([0-9]{3}[-]*[0-9]{2}[-]*[0-9]{4})*$/',
            '/^([A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2})*$/',
            '/^([A-Z])*$/',
            '/^([0-9]{5}(?:-[0-9]{4})?)*$/',
            '/^(4[0-9]{12}(?:[0-9]{3})?)*$/',
            '^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})$',
            '^[a-zA-Z]+$',
            '/^[ABCEGHJKLMNPRSTVXY][0-9][A-Z] [0-9][A-Z][0-9]$/',
            '^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2}$',
            '^(19|20)?[0-9]{2}[- /.](0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])$',
            '^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$',
            '/(?=^.{6,}$)((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.*/',
            '/^[0-9]{5}(?:-[0-9]{4})?$/',
            '/^[a-z\d](?:[a-z\d]|-(?=[a-z\d])){0,38}$/',
            '/.*[a-zA-Z].*/',
            '/<([\w:-]+)/',
            '/<|&#?\w+;/',
            '/^([^(]+?)=>/',
            '/^[^(]*\(\s*([^)]*)\)/',
            '/,/',
            '/^\s*(_?)(\S+?)\\1\s*$/',
            '/^<([\w-]+)\s*\/?>(?:<\/\\1>|)$/',
            '/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/',
            '/[\s\r\n]+/',
            '/%27/',
            '/^(https?:)?\/\/[^/]*/',
            '/\\/',
            '/\\!/',
            '/\\\/',
            '/\\#/',
            '/\\$/',
            '/\\&/',
            '/\\)/',
            '/\\*/',
            '/\\+/',
            '/\\,/',
            '/\\-/',
            '/\\./',
            '/\\.14/',
            '/\\//',
            '/\\0/',
            '/\\1/',
            '/\</',
            '/\\?/',
            '/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/,',
            '/^(?![+-]?\d{4,5}-?(?:\d{2}|W\d{2})T)(?:|(\d{4}|[+-]\d{5})-?(?:|(0\d|1[0-2])(?:|-?([0-2]\d|3[0-1]))|([0-2]\d{2}|3[0-5]\d|36[0-6])|W([0-4]\d|5[0-3])(?:|-?([1-7])))(?:(?!\d)|T(?=\d)))(?:|([01]\d|2[0-4])(?:|:?([0-5]\d)(?:|:?([0-5]\d)(?:|\.(\d{3})))(?:|[zZ]|([+-](?:[01]\d|2[0-4]))(?:|:?([0-5]\d)))))$/',
            '/(([^:]*)://([^:/?]*)(:([0-9]+))?)?([^?#]*)([?]([^#]*))?(#(.*))?/',
            '/^<([a-z1-6]+)([^<]+)*(?:>(.*)<\/\\1>| *\/>)$/',
            '/^((https?|ftp):\/\/|(www|ftp)\.)[a-z0-9-]+(\.[a-z0-9-]+)+([\/?].*)?$/',
            '/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/',
            '/((^|\.)((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))){4}$/',
            '/((^|:)([0-9a-fA-F]{0,4})){1,8}$/',
            '/^([\u4E00-\u9FA5\u3002\uff1b\uff0c\uff1a\u201c\u201d\uff08\uff09\u3001\uff1f\u300a\u300b]|[\uFE30-\uFFA0])+$/',
            '/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/',
            '/^[a-zA-Z0-9]+$/',
            ' /^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$/',
            '/^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/',
            '/^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$/',
            '/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/',
            '/^[a-z0-9-]+$/',
            '/^.+@.+$/',
            '/^((https?|ftp|file):\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/',
            '/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/',
            '/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/',
            '/^[a-zA-Z0-9_-]{3,16}$/',
            '/^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*$/',
            '/^\d+$/',
            '/^-\d+$/',
            '/^-?\d+$/',
            '/^\d*\.?\d+$/',
            '/^-\d*\.?\d+$/',
            '/^-?\d*\.?\d+$/',
            '/https?:\/\/(www\.)?youtube.com\/channel\/UC([-_a-z0-9]{22})/',
            '/\[img\](.*?)\[\/img\]/',
            '/^[.-]{1,5}(?:[ \t]+[.-]{1,5})*(?:[ \t]+[.-]{1,5}(?:[ \t]+[.-]{1,5})*)*$/',
            '/[\r\n]|$/',
            '/a(b)(c)/',
            '/[^\\s$]+/',
            '/function/',
            '/(|)??x/',
            '/[\u2028]/',
            '/\w/',
            '/(?!foo)/',
            '/+/',
            '/(?:a)/',
            '/a{1,2}/',
            '/\\?>|[\\n\\r\\t ][^?]*\\?+([^>?][^?]*\\?+)*>/',
            '/\\@/',
            '/\\D/',
            '/\\S/',
            '/\\/',
            '/\\b/',
            '/\\cB/',
            '/\\cE/',
            '/\\cK/',
            '/\\cL/',
            '/\\cr/',
            '/((1)|(12))((3)|(23))/',
            '/./',
            '/\\c\u0411/',
            '/\\c\u0412/',
            '/\\c\u0413/',
            '/\\c\u0415/',
            '/\\c\u0417/',
            '/\\c\u0419/',
            '/\\c\u041A/',
            '/\\c\u041C/',
            '/\\c\u0423/',
            '/\\c\u0426/',
            '/\\c\u0427/',
            '/\\c\u042C/',
            '/\\c\u043A/',
            '/\\c\u043E/',
            '/\\c\u0441/',
            '/\\c\u0443/',
            '/\\c\u0444/',
            '/a[a-z]{2,4}/',
            '/a[a-z]{2,4}?/',
            '/abc/',
            '/abc{1}/',
            '/[\\c-f]/',
            '/[0-9A-Za-z_\$(|)\[\]\/\\^]/',
            // Annex B
            '/[\c0]/',
            '/[\c00]+/',
            '/[\c10]+/',
            '/\c8/',
            '/[\c80]+/',
            '/[\c_]/',
            '/\C/',
            '/7\89/',
            '/\9/',
            '/8\90/',
            '/[%-\dz]+/',
            //'/[\s-\d]+/',
            //'/[\s-\dz]+/',
            '/[--\dz]+/',
            '/.(?=Z)*/',
            '/.(?=Z)?/',
            '/.(?=Z){2,}/',
            '/.(?=Z){2,3}/',
            '/(.)(.)(.)(.)(.)(.)(.)(.)\8\8/',
            '/(.)(.)(.)(.)(.)(.)(.)(.)(.)\9\9/',
            '/.(?=Z){2}?/',
            '/.(?=Z){2,}?/',
            '/[a-e](?!Z)+/',
            '/[a-e](?!Z){2}/',
            '/[a-e](?!Z){2,3}/',
            '/[a-e](?!Z)??/',
            '/[a-e](?!Z){2}?/',
            '/{2,}/',
            '/{2,3}/',
            '/\\400/',
            '/\\6/',
            '/\\9/',
            '/\\8/',
            '/\c9/',
            '/[\c9]/',
            '/[\c90]+/.',
            '/\c_/',
            '/[\c8]/',
            '/a|b/',
            '/a|bc/',
            '/a|b|[]/',
            '/a|b|c/',
            '/d+/',
            '/e{1}/',
            '/e{2,}/',
            '/foo/',
            '/ll|l/',
            '/nd|ne/',
            '/\t[a-b|q-s]/',
            '/z/',
            '/(\\1)+\\1\\1/',
            '/(\\1)a/',
            '/(\\2)(b)a/',
            '/[ \\f\\n]/',
            '/[ \\n\\t\\r]+/',
            '/[ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*|"[^"]*"|\'[^\']*\'))*/',
            '/[ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*|"[^"]*"|\'[^\']*\'))*([ \\n\\t\\r]+)?(\\[(<(!(--[^-]*-([^-][^-]*-)*->|[^-]([^]"\'><]+|"[^"]*"|\'[^\']*\')*>)|\\?([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*(\\?>|[\\n\\r\\t ][^?]*\\?+([^>?][^?]*\\?+)*>))|%([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*;|[ \\n\\t\\r]+)*]([ \\n\\t\\r]+)?)?>?/',
            '/[ \\u0020]/',
            '/[0-9]/',
            '/[1-2]/',
            '/[A-I]/',
            '/[A-Za-z0-9_:.-]|[^\\x00-\\x7F]/',
            '/[A-Za-z0-9_]/',
            '/[A-Za-z_:]|[^\\x00-\\x7F]/',
            '/[Nn]?evermore/',
            '/[Nn]evermore/',
            '/[\\0001]/',
            '/(((hello)))/',
            '/((1)|(12))((3)|(23))/',
            '/(?:(?:hello))/',
            '/(?:)/',
            '/(?:ab|cd)\\d?/',
            '/(?:x)/',
            '/--([^-]*-([^-][^-]*-)*->?)?|\\[CDATA\\[([^]]*]([^]]+])*]+([^]>][^]]*]([^]]+])*]+)*>)?|DOCTYPE([ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+(([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*|"[^"]*"|\'[^\']*\'))*([ \\n\\t\\r]+)?(\\[(<(!(--[^-]*-([^-][^-]*-)*->|[^-]([^]"\'><]+|"[^"]*"|\'[^\']*\')*>)|\\?([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*(\\?>|[\\n\\r\\t ][^?]*\\?+([^>?][^?]*\\?+)*>))|%([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*;|[ \\n\\t\\r]+)*]([ \\n\\t\\r]+)?)?>?)?/',
            '/([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*/',
            '/([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+)?=([ \\n\\t\\r]+)?("[^<"]*"|\'[^<\']*\'))*([ \\n\\t\\r]+)?/?>?/',
            '/([ \\n\\t\\r]+([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+)?=([ \\n\\t\\r]+)?("[^<"]*"|\'[^<\']*\'))*/',
            '/([ \\n\\t\\r]+)?/',
            '/([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*([ \\n\\t\\r]+)?>?/',
            '/([A-Za-z_:]|[^\\x00-\\x7F])([A-Za-z0-9_:.-]|[^\\x00-\\x7F])*(\\?>|[\\n\\r\\t ][^?]*\\?+([^>?][^?]*\\?+)*>)?/',
            '/([Nn]?ever|([Nn]othing\\s{1,}))more/',
            '/([^]"\'><]+|"[^"]*"|\'[^\']*\')*>/',
            '/(\\1)/',
            '/(\\d+)/',
            '/(a)*/',
            '/(aa|aabaac|ba|b|c)*/',
            '/(x)/',
            '/(z)((a+)?(b+)?(c))*/',
            '/^\\d{1,3}(.\\d{1,3}){3}$/',
            '/[\\d][\\12-\\14]{1,}[^\\d]/',
            '/^[ァ-ンヴー]*$/',
            '/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/',
            '/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/',
            '/^[a-zA-Z0-9.!#$%&\'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/',
            '/^[^\\x20-\\x7e]*$/',
            '/=/',
            '/=?/',
            '/^[0-9]{8}$/',
            '/^([0-9]{0,8})$/',
            '/^([a-zA-Z0-9]{6,8})$/',
            '/^([a-zA-Z0-9]{8,})$/',
            '/^[0-9a-zA-Z]*$/',
            '/[\\s]/',
            '/^[0-9]+$/',
            '/[\\d-\\uFFFF]/',
            '/[\\D-\\uFFFF]/',
            '/[\\s-\\uFFFF]/',
            '/[\\w-\\uFFFF]/',
            '/[\\W-\\uFFFF]/',
            '/[\\u0000-\\s]/',
            '/[\\u0000-\\W]/',
            '/[\\u0000-\\u0001]/',
            '/[\\c0-]/',
            '/[\\u{2-\\u{1}]/',
            '/[\\a-\\z]/',
            '/[0-9--/]/',
            '/[0-9--/]/u',
            '/[\\[]/',
            '/[\\]]/',
            '/[\\{]/',
            '/[\\}]/',
            '/[\\|]/',
            '/[\\)]/',
            '/[\\.]/',
            '/[\\?]/',
            '/[\\$]/',
            '/[\\u{]/',
            '/[\\u{20]/',
            '/[\\u{20}]/',
            '/[\\u{110000}]/',
            '/[\\77]/',
            '/[\\400]/',
            '/[\\u{10FFFF}]/',
            '/[\\u{z]/',
            '/[\\u{a}]/',
            '/[\\u1234]/',
            '/[\\u1234]/',
            '/[\\u12]/',
            '/[\\u1]/',
            '/[\\u]/',
            '/[\\x1]/',
            '/[\\x12]/',
            '/[\\x]/',
            '/[\\c1]/',
            '/[\\cz]/',
            '/[\\cA]/',
            '/[\\0]/',
            '/[\\v]/',
            '/[\\t]/',
            '/[\\w]/',
            '/[\\n]/',
            '/[\\S]/',
            '/[\\D]/',
            '/[\\d]/',
            '/[\\f]/',
            '/[\\W]/',
            '/[\\w]/',
            '/[\\d]/',
            '/[\\b-\\n]/',
            '/[\\s]/',
            '/[\\S]/',
            '/[\\D]/',
            '/[a-b--/]/',
            '/[---]/',
            '/[-a-b-]/',
            '/[a-b]/',
            '/\{1.*\}/',
            '/(.*?)*?B/',
            '/[a-]/',
            '/[a-]/',
            '/[-a-]/',
            '/[-a]/',
            '/[--]/',
            '/[a]/',
            '/[-]/',
            '/(a)/',
            '/(\d+)/',
            '/(?=a){1}/',
            '[\u0100-\u0101]',
            '/[\uD83D\\uDC38]/',
            '/[^-a-b-]/',
            '/[]/',
            '/\\s/',
            '/\\a/',
            '/\\//',
            '/\\|/',
            '/\\}/',
            '/\\[/',
            '/\\[/u',
            '/\\{/',
            '/\\]/',
            '/\\(/',
            '/\\)/',
            '/\\?/',
            '/\\./',
            '/\\^/',
            '/\\$/',
            '/\\377/',
            '/\\u{110000}/',
            '/\\u{00000001}/',
            '/\\u12345/',
            '/\\u{/',
            '/\\u{z/',
            '/\\u{a}/',
            '/\\u{20/',
            '/\\u{20}/',
            '/\\u{10FFFF}/',
            '/\\+/',
            '/function\s*\(([a-zA-Z0-9\s:,\.\[\]<>=]+)?\)(:\s*[a-zA-Z0-9<>\[\]]+)?/',
            '/\\v/',
            '/\\cA/u',
            '/\\cz/',
            '/\\c1/',
            '/\\c/',
            '/\\0/',
            '/\\u/',
            '/\\u1/',
            '/\\u12/',
            '/\\u123/',
            '/\\u1234/',
            '/\\S/',
            '/\\f/',
            '/\\t/',
            '/\\r/',
            '/\\n/',
            '/\\w/',
            '/(?:a)/',
            '/\\d/',
            '/\\D/',
            '/\\s/',
            '/\\1(a)/',
            '/(?:a)\\1/',
            '/^/',
            '/a{?/',
            '/a{}?/',
            '/a{a}?/',
            '/a{1}?/',
            '/a{1?/',
            '/a{1,}?/',
            '/a{1,?/',
            '/a{1,2}?/',
            '/a{1,2?/',
            '/a{2,1?/',
            '/👍🚀❇️/',
            '/(a)\\2/',
            '/(?:a)\\2/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/',
            '/$/',
            '/./',
            '/]/',
            '/{/',
            '/}/',
            '/|/',
            '/${1,2/',
            '/\\1/',
            '/(a)\\1/',
            '/a??/',
            '/a+?/',
            '/a{1,/',
            '/a{1,2/',
            '/a{2,1/',
            '/a*?/',
            '/a{1,2}/',
            '/a{1/',
            '/a{1,}/',
            '/a+/',
            '/(?!)/',
            '/(?!foo)/',
            '/a?/',
            '/a{/',
            '/a{}/',
            '/a{a}/',
            '/a{1}/',
            '/(?=a)+/',
            '/(?=a)?/',
            '/(?=a){/',
            '/(?=a){}/',
            '/(?=a){a}/',
            '/(?=a){1}/',
            '/(?=a){1}/',
            '/(?=a){1,}/',
            '/(?=a){1,2}/',
            '/a*/',
            '/^|$|\\b|\\B/',
            '/(?=foo)/',
            '/a{1,?/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/',
            '/foo/',
            '/foo/',
            '/foo|bar/',
            '/||||/',
            '/^|$|\\b|\\B/',
            '/^[ｧ-ﾝﾞﾟ\\-]*$/',
            '/^[^\\x20-\\x7e]*$/',
            '/^[a-zA-Z0-9.!#$%&\'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/',
            '/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/',
            '/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/',
            '/^\\s*|\\s*$/',
            '/^\\s*|\\s*$/',
            '/^\\s*|\\s*$/u',
            '/[\\d][\\12-\\14]{1,}[^\\d]/',
            '/^[ぁ-んー]*$/',
            '/^[ぁ-んー]*$/u',
            '/||||/',
            '/||||/u',
            '/^|$|\\b|\\B/',
            '/(?=foo)/',
            '/(?!)/',
            '/(?=a){1,}/',
            '/(?=a){1,2}/',
            '/a*/',
            '/a+/',
            '/a?/',
            '/a{/',
            '/a{}/',
            '/a{a}/',
            '/a{1}/',
            '/a{1/',
            '/a{1,}/',
            '/a{1,/',
            '/a*?/',
            '/a+?/',
            '/a??/',
            '/a{?/',
            '/a{}?/',
            '/a{a}?/',
            '/a{1}?/',
            '/a{1?/',
            '/a{1,}?/',
            '/a{1,?/',
            '/a{1,2}?/',
            '/a{1,2?/',
            '/a{2,1?/',
            '/👍🚀❇️/',
            '/^/',
            '/$/',
            '/./',
            '/]/',
            '/{/',
            '/}/',
            '/|/',
            '/${1,2/',
            '/\\1/',
            '/(a)\\1/',
            '/\\1(a)/',
            '/(?:a)\\1/',
            '/(a)\\2/',
            '/(?:a)\\2/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/',
            '/\\d/',
            '/\\D/',
            '/\\s/',
            '/\\S/',
            '/\\w/',
            '/\\W/',
            '/\\f/',
            '/\\n/',
            '/\\r/',
            '/\\t/',
            '/\\v/',
            '/\\cA/',
            '/\\cz/',
            '/\\c1/',
            '/\\c/',
            '/\\0/',
            '/\\u/',
            '/\\u1/',
            '/\\u12/',
            '/\\u123/',
            '/\\u1234/',
            '/\\u12345/',
            '/\\u{/',
            '/\\u{z/',
            '/\\u{a}/',
            '/\\u{20/',
            '/\\u{20}/',
            '/\\u{10FFFF}/',
            '/\\u{110000}/',
            '/\\u{00000001}/',
            '/\\377/',
            '/\\400/',
            '/\\^/',
            '/\\$/',
            '/\\./',
            '/\\+/',
            '/\\?/',
            '/\\(/',
            '/\\)/',
            '/\\[/',
            '/\\]/',
            '/\\{/',
            '/\\}/',
            '/\\|/',
            '/\\//',
            '/\\a/',
            '/\\s/',
            '/[]/',
            '/[^-a-b-]/',
            '/[-]/',
            '/[a]/',
            '/[--]/',
            '/[-a]/',
            '/[-a-]/',
            '/[a-]/',
            '/[a-b]/',
            '/[-a-b-]/',
            '/[---]/',
            '/[\\b-\\n]/',
            '/[b\\-a]/',
            '/[\\d]/',
            '/[\\D]/',
            '/[\\s]/',
            '/[\\S]/',
            '/[\\w]/',
            '/[\\W]/',
            '/[\\d]/',
            '/[\\D]/',
            '/[\\s]/',
            '/[\\S]/',
            '/[\\w]/',
            '/[\\W]/',
            '/[\\f]/',
            '/[\\n]/',
            '/[\\r]/',
            '/[\\t]/',
            '/[\\v]/',
            '/[\\cA]/',
            '/[\\cz]/',
            '/[\\c1]/',
            '/[\\c]/',
            '/[\\0]/',
            '/[\\x]/',
            '/[\\xz]/',
            '/[\\x1]/',
            '/[\\x12]/',
            '/[\\x123]/',
            '/[\\u]/',
            '/[\\u1]/',
            '/[\\u12]/',
            '/[\\u123]/',
            '/[\\u1234]/',
            '/[\\u12345]/',
            '/[\\u{]/',
            '/[\\u{z]/',
            '/[\\u{a}]/',
            '/[\\u{20]/',
            '/[\\u{20}]/',
            '/[\\u{10FFFF}]/',
            '/[\\u{110000}]/',
            '/[\\u{00000001}]/',
            '/[\\77]/',
            '/[\\377]/',
            '/[\\400]/',
            '/[\\^]/',
            '/[\\$]/',
            '/[\\.]/',
            '/[\\+]/',
            '/[\\?]/',
            '/[\\(]/',
            '/[\\)]/',
            '/[\\[]/',
            '/[\\]]/',
            '/[\\{]/',
            '/[\\}]/',
            '/[\\|]/',
            '/[\\/]/',
            '/[\\a]/',
            '/[\\s]/',
            '/[\\d-\\uFFFF]/',
            '/[\\D-\\uFFFF]/',
            '/[\\s-\\uFFFF]/',
            '/[\\S-\\uFFFF]/',
            '/[\\w-\\uFFFF]/',
            '/[\\W-\\uFFFF]/',
            '/[\\u0000-\\d]/',
            '/[\\u0000-\\D]/',
            '/[\\u0000-\\s]/',
            '/[\\u0000-\\S]/',
            '/[\\u0000-\\w]/',
            '/[\\u0000-\\W]/',
            '/[\\u0000-\\u0001]/',
            '/[\\u{2-\\u{1}]/',
            '/[\\a-\\z]/',
            '/[\\c0-]/',
            '/[\\c_]/',
            '/^[0-9]*$/',
            '/^[0-9]+$/',
            '/^[a-zA-Z]*$/',
            '/^[a-zA-Z]+$/',
            '/^[0-9a-zA-Z]*$/',
            '/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/',
            '/^([a-zA-Z0-9]{8,})$/',
            '/^([a-zA-Z0-9]{6,8})$/',
            '/^([0-9]{0,8})$/',
            '/^[0-9]{8}$/',
            '/^\\d{3}-\\d{4}$/',
            '/^\\d{1,3}(.\\d{1,3}){3}$/',
            '/^([1-9][0-9]*|0)(\\.[0-9]+)?$/',
            '/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/',
            '/^[ぁ-んー]*$/',
            '/^[ァ-ンヴー]*$/',
            '/^[ｧ-ﾝﾞﾟ\\-]*$/',
            '/^[^\\x20-\\x7e]*$/',
            '/^[a-zA-Z0-9.!#$%&\'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/',
            '/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/',
            '/^\\s*|\\s*$/',
            '/[\\d][\\12-\\14]{1,}[^\\d]/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/',
            '/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/',
            '/\\u{a}/u',
            '/[\\a-\\z]/',
            '/[\\c0-]/',
            '/[\\w-\\uFFFF]/',
            '/[\\b-\\n]/',
            '/\\(/',
            '/\\)/',
            '/\\[/',
            '/[\\s-\\uFFFF]/',
            '/[\\d-\\uFFFF]/',
            '/?/',
            '/+/',
            '/\\400/',
            '/\\^/',
            '/\\$/',
            '/\\./',
            '/\\+/',
            '/\\?/',
            '/\\]/',
            '/\\{/',
            '/\\}/',
            '/\\|/',
            '/\\//',
            '/\\a/',
            '/\\s/',
            '/[]/',
            '/[^-a-b-]/',
            '/[-]/',
            '/[a]/',
            '/[--]/',
            '/[-a]/',
            '/[-a-]/',
            '/[a-]/',
            '/[a-b]/',
            '/[-a-b-]/',
            '/[---]/',
            '/[\\cz]/',
            '/[\\c1]/',
            '/[\\c]/',
            '/[\\0]/',
            '/[\\x]/',
            '/[\\xz]/',
            '/[\\x1]/',
            '/[\\x12]/',
            '/[\\x123]/',
            '/[\\u]/',
            '/[\\u1]/',
            '/[\\u12]/',
            '/[\\u123]/',
            '/[\\u1234]/',
            '/[\\u12345]/',
            '/[\\u{]/',
            '/[\\u{z]/',
            '/[\\u{a}]/',
            '/[\\u{20]/',
            '/[\\u{20}]/',
            '/[\\u{10FFFF}]/',
            '/[\\u{110000}]/',
            '/[\\u{00000001}]/',
            '/[\\77]/',
            '/[\\377]/',
            '/[\\400]/',
            '/[\\^]/',
            '/[\\$]/',
            '/[\\.]/',
            '/[\\D-\\uFFFF]/',
            '/[\\S-\\uFFFF]/',
            '/[\\W-\\uFFFF]/',
            '/[\\u0000-\\d]/',
            '/[\\u0000-\\D]/',
            '/[\\u0000-\\s]/',
            '/[\\u0000-\\S]/',
            '/[\\u0000-\\w]/',
            '/[\\u0000-\\W]/',
            '/[\\u0000-\\u0001]/',
            '/^[0-9]*$/',
            '/^[0-9]+$/',
            '/^[a-zA-Z]*$/',
            '/^[a-zA-Z]+$/',
            '/^[0-9a-zA-Z]*$/',
            '/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/',
            '/^([a-zA-Z0-9]{8,})$/',
            '/^([a-zA-Z0-9]{6,8})$/',
            '/^([0-9]{0,8})$/',
            '/^[0-9]{8}$/',
            '/^https?:\\/\\//',
            '/^\\d{3}-\\d{4}$/',
            '/^\\d{1,3}(.\\d{1,3}){3}$/',
            '/^([1-9][0-9]*|0)(\\.[0-9]+)?$/',
            '/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/',
            '/^[ぁ-んー]*$/',
            '/^[ァ-ンヴー]*$/',
            '/^[ｧ-ﾝﾞﾟ\\-]*$/',
            '/^[^\\x20-\\x7e]*$/',
            '/^[a-zA-Z0-9.!#$%&\'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/',
            '/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/',
            '/^\\s*|\\s*$/',
            '/[\\d][\\12-\\14]{1,}[^\\d]/',
            '/(?!foo)/',
            '/(?=a)*/',
            '/(?=a)+/',
            '/(?=a)?/',
            '/(?=a){/',
            '/(?=a){}/',
            '/(?=a){a}/',
            '/(?=a){1}/',
            '/(?=a){1,}/',
            '/(?=a){1,2}/',
            '/a*/',
            '/a+/',
            '/a?/',
            '/a{/',
            '/a{}/',
            '/a{a}/',
            '/a{1}/',
            '/a{1/',
        ];

          for (const arg of validSyntax) {

            it(`${arg}`, () => {

                t.doesNotThrow(() => {
                    validateRegExp(`${arg}`, ValidatorState.Empty);
                });
            });
        }
    });
});
